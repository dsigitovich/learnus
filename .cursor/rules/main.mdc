---
description:
globs:
alwaysApply: true
---

# Cursor Rules –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ LearnUs

–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –ø–æ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ TDD, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–¥–∞ –∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ Hexagonal + DDD –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

## üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: Hexagonal + Domain-Driven Design (DDD)

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —Å–æ–±–ª—é–¥–∞—Ç—å):
```
src/
‚îú‚îÄ‚îÄ domain/                    # üéØ –Ø–¥—Ä–æ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
‚îÇ   ‚îú‚îÄ‚îÄ entities/             # User, Course, Lesson, Module
‚îÇ   ‚îú‚îÄ‚îÄ value-objects/        # Email, CourseLevel, Progress
‚îÇ   ‚îú‚îÄ‚îÄ aggregates/           # CourseAggregate, UserAggregate
‚îÇ   ‚îú‚îÄ‚îÄ repositories/         # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
‚îÇ   ‚îú‚îÄ‚îÄ services/             # Domain services
‚îÇ   ‚îî‚îÄ‚îÄ events/               # Domain events
‚îÇ
‚îú‚îÄ‚îÄ application/               # üöÄ Use Cases & Application Services
‚îÇ   ‚îú‚îÄ‚îÄ use-cases/            # CreateCourse, StartLesson, CompleteModule
‚îÇ   ‚îú‚îÄ‚îÄ services/             # CourseService, UserService, AIService
‚îÇ   ‚îú‚îÄ‚îÄ dto/                  # Data Transfer Objects
‚îÇ   ‚îî‚îÄ‚îÄ interfaces/           # Application interfaces
‚îÇ
‚îú‚îÄ‚îÄ infrastructure/            # üîå –í–Ω–µ—à–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îÇ   ‚îú‚îÄ‚îÄ database/             # SQLite implementation
‚îÇ   ‚îú‚îÄ‚îÄ ai/                   # OpenAI, Claude, etc.
‚îÇ   ‚îú‚îÄ‚îÄ auth/                 # NextAuth implementation
‚îÇ   ‚îî‚îÄ‚îÄ external/             # –î—Ä—É–≥–∏–µ –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã
‚îÇ
‚îú‚îÄ‚îÄ presentation/              # üé® UI & API
‚îÇ   ‚îú‚îÄ‚îÄ components/           # React components
‚îÇ   ‚îú‚îÄ‚îÄ pages/                # Next.js pages
‚îÇ   ‚îú‚îÄ‚îÄ api/                  # API routes
‚îÇ   ‚îî‚îÄ‚îÄ hooks/                # Custom hooks
‚îÇ
‚îî‚îÄ‚îÄ shared/                   # üîß –û–±—â–∏–µ —É—Ç–∏–ª–∏—Ç—ã
    ‚îú‚îÄ‚îÄ types/                # TypeScript types
    ‚îú‚îÄ‚îÄ utils/                # Helper functions
    ‚îî‚îÄ‚îÄ constants/            # App constants
```

### –ü—Ä–∏–Ω—Ü–∏–ø—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:
- **Domain Layer** –ù–ï –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥—Ä—É–≥–∏—Ö —Å–ª–æ–µ–≤
- **Application Layer** –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç Domain
- **Infrastructure Layer** –∑–∞–≤–∏—Å–∏—Ç –æ—Ç Domain –∏ Application
- **Presentation Layer** –∑–∞–≤–∏—Å–∏—Ç –æ—Ç Application –∏ Domain
- **Shared** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å–µ–º–∏ —Å–ª–æ—è–º–∏

## üß™ TDD (Test-Driven Development) –ü—Ä–∞–≤–∏–ª–∞

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
- –í–°–ï–ì–î–ê —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ç–µ—Å—Ç—ã –ü–ï–†–ï–î –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º –∫–æ–¥–∞
- –°–ª–µ–¥—É–π—Ç–µ —Ü–∏–∫–ª—É Red-Green-Refactor:
  1. Red: –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–∞–¥–∞–µ—Ç
  2. Green: –ù–∞–ø–∏—à–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
  3. Refactor: –£–ª—É—á—à–∏—Ç–µ –∫–æ–¥, —Å–æ—Ö—Ä–∞–Ω—è—è –≤—Å–µ —Ç–µ—Å—Ç—ã –∑–µ–ª–µ–Ω—ã–º–∏

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ—Å—Ç–æ–≤:
- –¢–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –ø–∞–ø–∫–µ `__tests__` —Ä—è–¥–æ–º —Å —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º –∫–æ–¥–æ–º
- –ò–º—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞: `[component].test.ts` –∏–ª–∏ `[component].test.tsx`
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤: `describe('ComponentName', () => {})`
- –ö–∞–∂–¥—ã–π —Ç–µ—Å—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ–¥–Ω—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

### –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–µ—Å—Ç–∞:
```typescript
describe('CreateCourseUseCase', () => {
  describe('execute', () => {
    it('should create course with valid data', async () => {
      // Arrange
      const request = { title: 'React Basics', level: 'Beginner' };
      const mockRepository = createMockCourseRepository();
      const mockAIService = createMockAIService();
      const useCase = new CreateCourseUseCase(mockRepository, mockAIService);
      
      // Act
      const result = await useCase.execute(request);
      
      // Assert
      expect(result.isSuccess).toBe(true);
      expect(result.course.title).toBe(request.title);
    });
  });
});
```

## üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞

### –ü–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∫–æ–º–º–∏—Ç–æ–º:
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `npm run lint` - –ø—Ä–æ–≤–µ—Ä–∫–∞ ESLint
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `npm run type-check` - –ø—Ä–æ–≤–µ—Ä–∫–∞ TypeScript
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å–µ —Ç–µ—Å—Ç—ã: `npm test`
4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ > 80%

### –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Prettier –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- –°–ª–µ–¥—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞–º ESLint
- –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (no `any`)
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ strict TypeScript —Ä–µ–∂–∏–º

## üéØ Domain-Driven Design (DDD) –ü—Ä–∞–≤–∏–ª–∞

### Entities (–°—É—â–Ω–æ—Å—Ç–∏):
```typescript
// domain/entities/Course.ts
export class Course {
  constructor(
    private readonly id: CourseId,
    private readonly title: CourseTitle,
    private readonly modules: Module[],
    private readonly level: CourseLevel
  ) {}

  // –ë–∏–∑–Ω–µ—Å-–º–µ—Ç–æ–¥—ã
  canStartLesson(userLevel: UserLevel): boolean {
    return userLevel.canAccess(this.level);
  }

  getNextLesson(progress: CourseProgress): Lesson | null {
    // –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
  }
}
```

### Value Objects:
```typescript
// domain/value-objects/CourseLevel.ts
export class CourseLevel {
  constructor(private readonly value: 'Beginner' | 'Intermediate' | 'Advanced') {
    if (!['Beginner', 'Intermediate', 'Advanced'].includes(value)) {
      throw new Error('Invalid course level');
    }
  }

  toString(): string {
    return this.value;
  }

  canAccess(userLevel: UserLevel): boolean {
    // –ë–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞ –¥–æ—Å—Ç—É–ø–∞
  }
}
```

### Aggregates:
```typescript
// domain/aggregates/CourseAggregate.ts
export class CourseAggregate {
  constructor(
    private readonly course: Course,
    private readonly progress: CourseProgress
  ) {}

  startLesson(lessonId: string): Result<void, Error> {
    // –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
  }
}
```

## üöÄ Application Layer –ü—Ä–∞–≤–∏–ª–∞

### Use Cases:
```typescript
// application/use-cases/CreateCourseUseCase.ts
export class CreateCourseUseCase {
  constructor(
    private courseRepository: ICourseRepository,
    private aiService: IAIService,
    private eventBus: IEventBus
  ) {}

  async execute(request: CreateCourseRequest): Promise<Result<Course, Error>> {
    // 1. –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const validationResult = this.validateRequest(request);
    if (validationResult.isFailure()) {
      return Result.fail(validationResult.error);
    }

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞ —á–µ—Ä–µ–∑ AI
    const courseData = await this.aiService.generateCourse(request.prompt);
    
    // 3. –°–æ–∑–¥–∞–Ω–∏–µ domain entity
    const course = Course.create(courseData);
    
    // 4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    await this.courseRepository.save(course);
    
    // 5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π
    this.eventBus.publish(new CourseCreatedEvent(course.id));
    
    return Result.ok(course);
  }
}
```

### DTO (Data Transfer Objects):
```typescript
// application/dto/CreateCourseDto.ts
export interface CreateCourseDto {
  title: string;
  description: string;
  level: 'Beginner' | 'Intermediate' | 'Advanced';
  prompt: string;
}

export interface CreateCourseResponse {
  course: Course;
  message: string;
}
```

## üîå Infrastructure Layer –ü—Ä–∞–≤–∏–ª–∞

### –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:
```typescript
// infrastructure/database/CourseRepository.ts
export class CourseRepository implements ICourseRepository {
  constructor(private db: Database) {}

  async save(course: Course): Promise<void> {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ SQLite
  }

  async findById(id: CourseId): Promise<Course | null> {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ ID
  }
}
```

### AI Service:
```typescript
// infrastructure/ai/OpenAIService.ts
export class OpenAIService implements IAIService {
  constructor(private openai: OpenAI) {}

  async generateCourse(prompt: string): Promise<CourseData> {
    // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å OpenAI API
  }
}
```

## üé® Presentation Layer –ü—Ä–∞–≤–∏–ª–∞

### API Routes:
```typescript
// presentation/api/courses/route.ts
export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const dto = CreateCourseDto.parse(body); // Zod –≤–∞–ª–∏–¥–∞—Ü–∏—è
    
    const useCase = container.resolve(CreateCourseUseCase);
    const result = await useCase.execute(dto);
    
    if (result.isFailure()) {
      return NextResponse.json(
        { error: result.error.message },
        { status: 400 }
      );
    }
    
    return NextResponse.json({
      data: result.value,
      message: 'Course created successfully'
    });
  } catch (error) {
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}
```

### React Components:
```typescript
// presentation/components/CourseCreator.tsx
export function CourseCreator() {
  const createCourse = useCreateCourse(); // Custom hook

  const handleSubmit = async (data: CreateCourseFormData) => {
    const result = await createCourse(data);
    
    if (result.isSuccess) {
      // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    } else {
      // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      {/* –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—Å–∞ */}
    </form>
  );
}
```

## üìù –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è

### –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ:
- **Entities**: PascalCase (`Course`, `User`)
- **Value Objects**: PascalCase (`CourseLevel`, `Email`)
- **Use Cases**: PascalCase —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º UseCase (`CreateCourseUseCase`)
- **Repositories**: PascalCase —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º Repository (`CourseRepository`)
- **Services**: PascalCase —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º Service (`AIService`)
- **Interfaces**: PascalCase —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º I (`ICourseRepository`)
- **DTO**: PascalCase —Å —Å—É—Ñ—Ñ–∏–∫—Å–æ–º Dto (`CreateCourseDto`)

### –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:
- –ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–æ–∂–Ω—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSDoc –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö API
- –ò–∑–±–µ–≥–∞–π—Ç–µ –æ—á–µ–≤–∏–¥–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Result pattern –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
- –í—Å–µ–≥–¥–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ—à–∏–±–∫–∏
- –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
- –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

## üöÄ –†–∞–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å—Å

### –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:
1. –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è domain entities
2. –†–µ–∞–ª–∏–∑—É–π—Ç–µ domain entities –∏ business rules
3. –°–æ–∑–¥–∞–π—Ç–µ use cases –≤ application layer
4. –†–µ–∞–ª–∏–∑—É–π—Ç–µ infrastructure adapters
5. –°–æ–∑–¥–∞–π—Ç–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
6. –î–æ–±–∞–≤—å—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã

### –ü—Ä–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–µ:
1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç
2. –†–µ—Ñ–∞–∫—Ç–æ—Ä—å—Ç–µ –∫–æ–¥
3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã —Å–Ω–æ–≤–∞
4. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

## üßπ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

### –ü–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∫–æ–¥–∞:
- [ ] –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç
- [ ] ESLint –Ω–µ –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–æ–∫
- [ ] TypeScript –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
- [ ] –ö–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç Hexagonal + DDD –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
- [ ] –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
- [ ] –û–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

## üìö –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
- Jest –¥–ª—è unit —Ç–µ—Å—Ç–æ–≤
- React Testing Library –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- MSW –¥–ª—è –º–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è API

### –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞:
- ESLint + Prettier
- Husky –¥–ª—è pre-commit hooks
- Commitizen –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏ –∫–æ–º–º–∏—Ç–æ–≤

### –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:
- Zod –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
- Dependency injection container
- Result pattern –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫

## ‚ö†Ô∏è –ó–∞–ø—Ä–µ—â–µ–Ω–æ

- –ü–∏—Å–∞—Ç—å –∫–æ–¥ –±–µ–∑ —Ç–µ—Å—Ç–æ–≤
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `any` —Ç–∏–ø –≤ TypeScript
- –°–º–µ—à–∏–≤–∞—Ç—å —Å–ª–æ–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
- –°–æ–∑–¥–∞–≤–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–µ—Ä–∞
- –ö–æ–º–º–∏—Ç–∏—Ç—å –∫–æ–¥ —Å –ø–∞–¥–∞—é—â–∏–º–∏ —Ç–µ—Å—Ç–∞–º–∏
- –†–∞–∑–º–µ—â–∞—Ç—å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –≤ presentation layer
- –°–æ–∑–¥–∞–≤–∞—Ç—å entities –±–µ–∑ value objects

## üéØ –¶–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞

- –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏: > 80%
- TypeScript strict mode: –≤–∫–ª—é—á–µ–Ω
- ESLint errors: 0
- Build time: < 30 —Å–µ–∫—É–Ω–¥
- Bundle size: –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω
- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è —á–∏—Å—Ç–æ—Ç–∞: 100%

## üîÑ Dependency Injection

### Container setup:
```typescript
// shared/container.ts
export const container = new Container();

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
container.bind<ICourseRepository>('ICourseRepository').to(CourseRepository);
container.bind<IAIService>('IAIService').to(OpenAIService);
container.bind<CreateCourseUseCase>('CreateCourseUseCase').to(CreateCourseUseCase);
```

–°–ª–µ–¥—É–π—Ç–µ —ç—Ç–∏–º –ø—Ä–∞–≤–∏–ª–∞–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ, —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–≥–æ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ —á–∏—Å—Ç–æ–≥–æ –∫–æ–¥–∞ –¥–ª—è LearnUs!
- Bundle size: –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω

–°–ª–µ–¥—É–π—Ç–µ —ç—Ç–∏–º –ø—Ä–∞–≤–∏–ª–∞–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ, —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–≥–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ –∫–æ–¥–∞!